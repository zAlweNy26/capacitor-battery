{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAK5C,MAAM,OAAO,UAAW,SAAQ,SAAS;IAAzC;;QAEU,eAAU,GAAG,IAAI,eAAe,EAAE,CAAC;IAoD7C,CAAC;IAlDC,KAAK,CAAC,KAAK;QACT,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,CAAC,CAAC,YAAY,IAAI,SAAS,CAAC,EAAE;YACpE,IAAI,CAAC,WAAW,CAAC,sDAAsD,CAAC,CAAC;SAC1E;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,MAAM,SAAS,CAAC,UAAU,EAAE,CAAC;YAE5C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,WAAW,CAAC,mDAAmD,CAAC,CAAC;aACvE;YAED,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;gBAChF,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;aAC/B,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;gBACpF,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;aAC/B,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;gBACvF,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;aAC/B,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;gBAC7E,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;aAC/B,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC,mBAAmB,EAAE,CAAC;SACnC;IACH,CAAC;IAEO,mBAAmB;QACzB,MAAM,MAAM,GAAG;YACb,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;YACjC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY;YACvC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe;YAC7C,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;SACR,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QAC9C,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,IAAI;QACR,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,kBAAkB;QACtB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,OAAO,KAAK,CAAC,kBAAkB,EAAE,CAAC;IACpC,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport { Battery } from './definitions';\nimport type { BatteryPlugin } from './definitions';\n\nexport class BatteryWeb extends WebPlugin implements BatteryPlugin {\n  private battery!: BatteryManager;\n  private controller = new AbortController();\n\n  async start(): Promise<Battery | undefined> {\n    if (typeof navigator === 'undefined' || !('getBattery' in navigator)) {\n      this.unavailable('Battery Status API is not available in this browser.');\n    } else {\n      this.battery = await navigator.getBattery();\n\n      if (!this.battery) {\n        this.unavailable('Unable to get the battery status in this browser.');\n      }\n\n      this.battery.addEventListener('chargingchange', () => this.notifyBatteryChange(), {\n        signal: this.controller.signal,\n      });\n\n      this.battery.addEventListener('chargingtimechange', () => this.notifyBatteryChange(), {\n        signal: this.controller.signal,\n      });\n\n      this.battery.addEventListener('dischargingtimechange', () => this.notifyBatteryChange(), {\n        signal: this.controller.signal,\n      });\n\n      this.battery.addEventListener('levelchange', () => this.notifyBatteryChange(), {\n        signal: this.controller.signal,\n      });\n\n      return this.notifyBatteryChange();\n    }\n  }\n\n  private notifyBatteryChange() {\n    const result = {\n      hasBattery: true,\n      isCharging: this.battery.charging,\n      chargingTime: this.battery.chargingTime,\n      dischargingTime: this.battery.dischargingTime,\n      level: this.battery.level,\n    } satisfies Battery;\n    this.notifyListeners('batteryChange', result);\n    return result;\n  }\n\n  async stop(): Promise<void> {\n    this.controller.abort();\n  }\n\n  async removeAllListeners(): Promise<void> {\n    this.controller.abort();\n    return super.removeAllListeners();\n  }\n}\n"]}