{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAEA,MAAM,CAAN,IAAY,iBAMX;AAND,WAAY,iBAAiB;IAC3B,+DAAO,CAAA;IACP,qDAAE,CAAA;IACF,uDAAG,CAAA;IACH,yDAAI,CAAA;IACJ,iEAAQ,CAAA;AACV,CAAC,EANW,iBAAiB,KAAjB,iBAAiB,QAM5B;AAED,MAAM,CAAN,IAAY,aAQX;AARD,WAAY,aAAa;IACvB,uDAAO,CAAA;IACP,iDAAI,CAAA;IACJ,iDAAI,CAAA;IACJ,iDAAI,CAAA;IACJ,yDAAQ,CAAA;IACR,iEAAY,CAAA;IACZ,uDAAO,CAAA;AACT,CAAC,EARW,aAAa,KAAb,aAAa,QAQxB;AAED,MAAM,CAAN,IAAY,aAMX;AAND,WAAY,aAAa;IACvB,uDAAO,CAAA;IACP,iEAAY,CAAA;IACZ,+DAAW,CAAA;IACX,yDAAQ,CAAA;IACR,iDAAI,CAAA;AACN,CAAC,EANW,aAAa,KAAb,aAAa,QAMxB","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\n\nexport enum BatteryChargeMode {\n  UNKNOWN,\n  AC,\n  USB,\n  DOCK,\n  WIRELESS,\n}\n\nexport enum BatteryHealth {\n  UNKNOWN,\n  COLD,\n  DEAD,\n  GOOD,\n  OVERHEAT,\n  OVER_VOLTAGE,\n  FAILURE,\n}\n\nexport enum BatteryStatus {\n  UNKNOWN,\n  NOT_CHARGING,\n  DISCHARGING,\n  CHARGING,\n  FULL,\n}\n\nexport interface Battery {\n  level: number;\n  hasBattery: boolean;\n  isCharging: boolean;\n  chargingTime?: number;\n  dischargingTime?: number;\n  currentCapacity?: number;\n  totalCapacity?: number;\n  realPercentage?: number;\n  technology?: string;\n  temperature?: number;\n  voltage?: number;\n  amperage?: number;\n  wattage?: number;\n  health?: BatteryHealth;\n  status?: BatteryStatus;\n  chargeMode?: BatteryChargeMode;\n}\n\nexport interface BatteryPlugin {\n  start(): Promise<Battery | undefined>;\n  stop(): Promise<void>;\n  addListener(eventName: 'batteryChange', listenerFunc: (event: Battery) => void): Promise<PluginListenerHandle>;\n  removeAllListeners(): Promise<void>;\n}\n"]}