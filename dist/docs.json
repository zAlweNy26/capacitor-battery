{
  "api": {
    "name": "BatteryPlugin",
    "slug": "batteryplugin",
    "docs": "Represents the BatteryPlugin interface.",
    "tags": [],
    "methods": [
      {
        "name": "start",
        "signature": "() => Promise<BatteryInfos | undefined>",
        "parameters": [],
        "returns": "Promise<BatteryInfos | undefined>",
        "tags": [
          {
            "name": "returns",
            "text": "A promise that resolves to the battery information or undefined."
          }
        ],
        "docs": "Starts the battery plugin and returns the battery information.",
        "complexTypes": [
          "BatteryInfos"
        ],
        "slug": "start"
      },
      {
        "name": "stop",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "returns",
            "text": "A promise that resolves when the plugin is stopped."
          }
        ],
        "docs": "Stops the battery plugin.",
        "complexTypes": [],
        "slug": "stop"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'batteryChange', listenerFunc: (event: BatteryInfos) => void) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "The name of the event.",
            "type": "'batteryChange'"
          },
          {
            "name": "listenerFunc",
            "docs": "The listener function to be called when the event is triggered.",
            "type": "(event: BatteryInfos) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [
          {
            "name": "param",
            "text": "eventName The name of the event."
          },
          {
            "name": "param",
            "text": "listenerFunc The listener function to be called when the event is triggered."
          },
          {
            "name": "returns",
            "text": "A promise that resolves to a PluginListenerHandle."
          }
        ],
        "docs": "Adds a listener for the 'batteryChange' event.",
        "complexTypes": [
          "PluginListenerHandle",
          "BatteryInfos"
        ],
        "slug": "addlistenerbatterychange"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "returns",
            "text": "A promise that resolves when all listeners are removed."
          }
        ],
        "docs": "Removes all listeners for the 'batteryChange' event.",
        "complexTypes": [],
        "slug": "removealllisteners"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "BatteryInfos",
      "slug": "batteryinfos",
      "docs": "Represents the battery information of the device.",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "level",
          "tags": [],
          "docs": "The current battery level as a percentage (0-100).",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "hasBattery",
          "tags": [],
          "docs": "Whether the device has a battery or not.",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "isCharging",
          "tags": [],
          "docs": "Whether the device is currently charging or not.",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "chargingTime",
          "tags": [],
          "docs": "The estimated time remaining until the battery is fully charged (in minutes). Only available when charging.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "dischargingTime",
          "tags": [],
          "docs": "The estimated time remaining until the battery is fully discharged (in minutes). Only available when discharging.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "currentCapacity",
          "tags": [],
          "docs": "The current battery capacity (in mAh). Only available on some devices.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "totalCapacity",
          "tags": [],
          "docs": "The total battery capacity (in mAh). Only available on some devices.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "realPercentage",
          "tags": [],
          "docs": "The real battery percentage, which may differ from the reported percentage. Only available on some devices.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "technology",
          "tags": [],
          "docs": "The technology used in the battery. Only available on some devices.",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "temperature",
          "tags": [],
          "docs": "The current temperature of the battery (in Celsius). Only available on some devices.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "voltage",
          "tags": [],
          "docs": "The current voltage of the battery (in volts). Only available on some devices.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "amperage",
          "tags": [],
          "docs": "The current amperage of the battery (in amperes). Only available on some devices.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "wattage",
          "tags": [],
          "docs": "The current wattage of the battery (in watts). Only available on some devices.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "health",
          "tags": [],
          "docs": "The health status of the battery. Only available on some devices.",
          "complexTypes": [
            "BatteryHealth"
          ],
          "type": "BatteryHealth"
        },
        {
          "name": "status",
          "tags": [],
          "docs": "The status of the battery. Only available on some devices.",
          "complexTypes": [
            "BatteryStatus"
          ],
          "type": "BatteryStatus"
        },
        {
          "name": "chargeMode",
          "tags": [],
          "docs": "The charging mode of the battery. Only available on some devices.",
          "complexTypes": [
            "BatteryChargeMode"
          ],
          "type": "BatteryChargeMode"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [
    {
      "name": "BatteryHealth",
      "slug": "batteryhealth",
      "members": [
        {
          "name": "UNKNOWN",
          "tags": [],
          "docs": "The health status is unknown."
        },
        {
          "name": "COLD",
          "tags": [],
          "docs": "The battery is cold."
        },
        {
          "name": "DEAD",
          "tags": [],
          "docs": "The battery is dead."
        },
        {
          "name": "GOOD",
          "tags": [],
          "docs": "The battery is in good health."
        },
        {
          "name": "OVERHEAT",
          "tags": [],
          "docs": "The battery is overheating."
        },
        {
          "name": "OVER_VOLTAGE",
          "tags": [],
          "docs": "The battery is experiencing over voltage."
        },
        {
          "name": "FAILURE",
          "tags": [],
          "docs": "The battery has failed."
        }
      ]
    },
    {
      "name": "BatteryStatus",
      "slug": "batterystatus",
      "members": [
        {
          "name": "UNKNOWN",
          "tags": [],
          "docs": "The battery status is unknown."
        },
        {
          "name": "NOT_CHARGING",
          "tags": [],
          "docs": "The battery is not charging."
        },
        {
          "name": "DISCHARGING",
          "tags": [],
          "docs": "The battery is discharging."
        },
        {
          "name": "CHARGING",
          "tags": [],
          "docs": "The battery is charging."
        },
        {
          "name": "FULL",
          "tags": [],
          "docs": "The battery is full."
        }
      ]
    },
    {
      "name": "BatteryChargeMode",
      "slug": "batterychargemode",
      "members": [
        {
          "name": "UNKNOWN",
          "tags": [],
          "docs": "The charging mode is unknown."
        },
        {
          "name": "AC",
          "tags": [],
          "docs": "The battery is being charged through an AC power source."
        },
        {
          "name": "USB",
          "tags": [],
          "docs": "The battery is being charged through a USB connection."
        },
        {
          "name": "DOCK",
          "tags": [],
          "docs": "The battery is being charged through a docking station."
        },
        {
          "name": "WIRELESS",
          "tags": [],
          "docs": "The battery is being charged wirelessly."
        }
      ]
    }
  ],
  "typeAliases": [],
  "pluginConfigs": []
}